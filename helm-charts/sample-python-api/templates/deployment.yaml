{{- $name := .Values.service_name }}
apiVersion: apps/v1
Kind: Deployment
metadata:
  name: {{ .Values.service_name}}
  namespace: {{ .Release.Namespace}}
  labels:
  {{- include "common.labels" . | nindent 6 }}
spec:
  {{- if not .Values.autoscaling.enabled -}}
  replicas: {{.Values.autoscaling.replicas | default 2 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "selector.labels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}  
      {{- end }}
      {{- if .Values.service_account.enabled }}
      serviceAccountName: {{ .Values.service_name }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.service_name}}
          image: {{- include "full.image_name" . }}
          imagePullPolicy: {{ .Values.image |  default "IfNotPresent" }}
          {{- with .Values.container.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.probes.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}            
          {{- end -}}
          {{- with .Values.probes.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.container.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      
      {{- if .Values.topologySpreadConstraint.enabled }}
      topologySpreadConstraints:
        - maxSkew: {{.Values.topologySpreadConstraint.maxSkew}}
          topologyKey: capacity-spread
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ .Values.service_name }}
      {{- end}}
      {{- with .Values.tolerations}}
      tolerations:
        {{- toYaml . | nindent 8}}
      {{- end}}
      {{- with .Values.affinity}}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.appConfig.enabled | or .Values.pvc.enabled}}
      volumes:
      {{- if .Values.appConfig.enabled }}
        - name: {{ printf "%s-volume" .Values.service_name }}
          configMap:
            name: {{ printf "%s-%s-appconfig" .Values.namespace .Values.service_name }}
      {{- end }}
      {{- if .Values.pvc.enabled}}
      {{- range .Values.pvc.volumeMounts}}
        - name: {{printf "%s-vol" .name | quote}}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s-pvc" $name .name | quote }}
      {{- end}}
      {{- end}}
      {{- end}}      


  
