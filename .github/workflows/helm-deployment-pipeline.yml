name: Lint/Upload/ and deploy helm chart
on:
  push:
    branches: 
        - main
        - development
    paths:
      - 'helm-charts/sample-python-api/Chart.yaml'
env:
  WORk_DIR: 'helm-charts'
  CHART_NAME: "sample-python-api"
  REGISTRY_ALIAS: "helm"
  ROLE_TO_ASSUME: ${{vars.ROLE_TO_ASSUME}}
jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Chekout Code
        uses: actions/checkout@v4
      - name: Get Info
        id: get_info
        working-directory: ${{env.WORk_DIR}}
        env:
            CHART_NAME: ${{env.CHART_NAME}}
        run: |
          CHART_VERSION=$(sed -rn "s/version:[[:space:]]//p" $CHART_NAME/Chart.yaml)
          echo "chart_version=$CHART_VERSION" >> $GITHUB_OUTPUT
      - name: Install Helm
        timeout-minutes: 3
        continue-on-error: false
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Lint Helm Chart
        id: lint_chart
        working-directory: ${{env.WORk_DIR}}/${{env.CHART_NAME}}
        run: |
          helm lint
          
      - name: Package Helm Chart
        if: steps.lint_chart.outcome == 'success'
        id: package_chart
        working-directory: ${{ env.WORk_DIR}}
        env:
            FULL_TAG: ${{ steps.get_info.outputs.chart_version }}-${{github.sha}}
            CHART_NAME: ${{ env.CHART_NAME}}
        run: |
          sed -i "s/version: .*$/version: $FULL_TAG/g" $CHART_NAME/Chart.yaml
          sleep 2
          helm package $CHART_NAME
      - name: Upload Artifact 
        if: steps.package_chart.outcome == 'success'
        id: upload
        uses: actions/upload-artifact@v4
        with:
            name: ${{env.CHART_NAME}}-${{steps.get_info.outputs.chart_version}}-${{github.sha}}.tgz
            path: ${{env.WORk_DIR}}/${{env.CHART_NAME}}-${{steps.get_info.outputs.chart_version}}-${{github.sha}}.tgz
    outputs:
      artifact_id: ${{steps.upload.outputs.artifact-id}}
      artifact_name: ${{ env.CHART_NAME}}-${{ steps.get_info.outputs.chart_version }}-${{github.sha}}.tgz

  publish:
    runs-on: ubuntu-latest
    needs: validate
    permissions:
       id-token: write
       contents: write
       
    steps:
        - name: Downloading Artefact From previous Job 
          uses: actions/download-artifact@v4
          with:
            artifact-ids: ${{needs.validate.outputs.artifact_id}}
        - name: Install Helm
          run: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

        - name: Configure AWS Credentails
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: ${{env.ROLE_TO_ASSUME}}
            aws-region: ap-southeast-1

        - name: Login To Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: List files
          run: |
            ls -al

        - name: Push Helm Chart to Amazon ECR
          env:
            REGISTRY: ${{steps.login-ecr.outputs.registry}}
            PACKAGE_NAME: ${{needs.validate.outputs.artifact_name}}
            REGISTRY_ALIAS: ${{env.REGISTRY_ALIAS}}
          run: |
            helm push $PACKAGE_NAME oci://$REGISTRY/$REGISTRY_ALIAS




          


      
          
          


